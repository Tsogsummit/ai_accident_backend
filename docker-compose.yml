version: '3.8'

services:
  # ==========================================
  # DATABASE SERVICES
  # ==========================================
  
  postgres:
    image: postgis/postgis:15-3.3
    container_name: accident_postgres
    environment:
      POSTGRES_DB: accident_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - accident_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: accident_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - accident_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # ==========================================
  # API GATEWAY
  # ==========================================
  
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: accident_api_gateway
    ports:
      - "3000:3000"
    environment:
      PORT: 3000
      NODE_ENV: production
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      ALLOWED_ORIGINS: "*"
      
      # Service URLs
      USER_SERVICE_URL: http://user-service:3001
      ACCIDENT_SERVICE_URL: http://accident-service:3002
      VIDEO_SERVICE_URL: http://video-service:3003
      AI_SERVICE_URL: http://ai-detection-service:3004
      NOTIFICATION_SERVICE_URL: http://notification-service:3005
      MAP_SERVICE_URL: http://map-service:3006
      REPORT_SERVICE_URL: http://report-service:3007
      CAMERA_SERVICE_URL: http://camera-service:3008
    networks:
      - accident_network
    depends_on:
      - user-service
      - accident-service
      - video-service
    restart: unless-stopped

  # ==========================================
  # MICROSERVICES
  # ==========================================

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: accident_user_service
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      NODE_ENV: production
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: accident_db
      DB_USER: postgres
      DB_PASSWORD: postgres123
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # JWT
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
    networks:
      - accident_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  accident-service:
    build:
      context: ./services/accident-service
      dockerfile: Dockerfile
    container_name: accident_accident_service
    ports:
      - "3002:3002"
    environment:
      PORT: 3002
      NODE_ENV: production
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: accident_db
      DB_USER: postgres
      DB_PASSWORD: postgres123
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # JWT
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      ALLOWED_ORIGINS: "*"
    networks:
      - accident_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  video-service:
    build:
      context: ./services/video-service
      dockerfile: Dockerfile
    container_name: accident_video_service
    ports:
      - "3003:3003"
    environment:
      PORT: 3003
      NODE_ENV: production
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: accident_db
      DB_USER: postgres
      DB_PASSWORD: postgres123
      
      # Google Cloud (optional - тохируулна уу)
      GCP_PROJECT_ID: ${GCP_PROJECT_ID:-}
      GCP_KEY_FILE: ${GCP_KEY_FILE:-}
      GCS_BUCKET_NAME: ${GCS_BUCKET_NAME:-accident-videos}
    volumes:
      - video_uploads:/app/uploads
    networks:
      - accident_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  ai-detection-service:
    build:
      context: ./services/ai-detection-service
      dockerfile: Dockerfile
    container_name: accident_ai_service
    ports:
      - "3004:3004"
    environment:
      PORT: 3004
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: accident_db
      DB_USER: postgres
      DB_PASSWORD: postgres123
      
      # Model
      MODEL_PATH: /app/models/yolov8n.pt
      
      # Google Cloud (optional)
      GCP_PROJECT_ID: ${GCP_PROJECT_ID:-}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS:-}
      GCS_BUCKET_NAME: ${GCS_BUCKET_NAME:-accident-videos}
    networks:
      - accident_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: accident_notification_service
    ports:
      - "3005:3005"
    environment:
      PORT: 3005
      NODE_ENV: production
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: accident_db
      DB_USER: postgres
      DB_PASSWORD: postgres123
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # Firebase (optional)
      FIREBASE_CREDENTIALS: ${FIREBASE_CREDENTIALS:-}
      FIREBASE_DATABASE_URL: ${FIREBASE_DATABASE_URL:-}
      
      ALLOWED_ORIGINS: "*"
    networks:
      - accident_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  map-service:
    build:
      context: ./services/map-service
      dockerfile: Dockerfile
    container_name: accident_map_service
    ports:
      - "3006:3006"
    environment:
      PORT: 3006
      NODE_ENV: production
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: accident_db
      DB_USER: postgres
      DB_PASSWORD: postgres123
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # Google Maps API (optional)
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY:-}
    networks:
      - accident_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  report-service:
    build:
      context: ./services/report-service
      dockerfile: Dockerfile
    container_name: accident_report_service
    ports:
      - "3007:3007"
    environment:
      PORT: 3007
      NODE_ENV: production
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: accident_db
      DB_USER: postgres
      DB_PASSWORD: postgres123
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - accident_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  admin-service:
    build: 
      context: ./services/admin-service
      dockerfile: Dockerfile
    container_name: accident_admin_service
    ports:
      - "3009:3009"
    environment:
      PORT: 3009
      NODE_ENV: production
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: accident_db
      DB_USER: postgres
      DB_PASSWORD: postgres123
      
      # JWT
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      
      ALLOWED_ORIGINS: "*"
    networks:
      - accident_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    

  camera-service:
    build:
      context: ./services/camera-service
      dockerfile: Dockerfile
    container_name: accident_camera_service
    ports:
      - "3008:3008"
    environment:
      PORT: 3008
      NODE_ENV: production
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: accident_db
      DB_USER: postgres
      DB_PASSWORD: postgres123
      
      # Camera settings
      STREAM_INTERVAL: 300
      STREAM_DURATION: 30
      HEALTH_CHECK_INTERVAL: 60
      TEMP_DIR: /tmp
      
      # Google Cloud (optional)
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS:-}
      GCP_PROJECT_ID: ${GCP_PROJECT_ID:-}
      GCS_BUCKET_NAME: ${GCS_BUCKET_NAME:-accident-videos}
      PUBSUB_TOPIC: ${PUBSUB_TOPIC:-video-processing}
    networks:
      - accident_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

# ==========================================
# NETWORKS
# ==========================================

networks:
  accident_network:
    driver: bridge
    name: accident_network

# ==========================================
# VOLUMES
# ==========================================

volumes:
  postgres_data:
    name: accident_postgres_data
  redis_data:
    name: accident_redis_data
  video_uploads:
    name: accident_video_uploads